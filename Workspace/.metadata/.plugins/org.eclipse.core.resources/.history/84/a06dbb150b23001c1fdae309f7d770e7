package com.camblyprogrammingassessment.prog;

import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.TreeMap;

public class StringOccurence {

	public void occurenceOfString(String input) {
		Map <String, String> map = new HashMap<String, String>();
		//Map<String, String> treeMap = new TreeMap<String, String>(Collections.reverseOrder());
		// MyComparator comp=new MyComparator(map);
         Map<String,String> newMap = new TreeMap<String, String>();
        if (input != null) {
        	input = input.replaceAll("\n", " ");
            String[] separatedWords = input.toLowerCase().replaceAll("[^\\w\\s\\-_]", "").split(" ");
            for (String str: separatedWords) {
                if (map.containsKey(str)) {
                    int count = Integer.parseInt(map.get(str));
                    map.put(str, String.valueOf(count + 1));
                    //treeMap.putAll(map);
                } else {
                    map.put(str, "1");
                }
            }
           
            //newMap.putAll(map);

            List<Entry<String, String>> list = new LinkedList<Entry<String, String>>(map.entrySet());  
    		//sorting the list elements  
    		Collections.sort(list, new Comparator<Entry<String, String>>()   {

    			@Override
    			public int compare(Entry<String, String> o1, Entry<String, String> o2) {
    				// TODO Auto-generated method stub
    				return o2.getValue().compareTo(o1.getValue());
    			}	
    		});
    		Map<String, String> sortedMap = new LinkedHashMap<String, String>();  
    		for (Entry<String, String> entry : list)   
    		{  
    		sortedMap.put(entry.getKey(), entry.getValue());  
    		} 
    		for (Entry<String, String> entry : map.entrySet())   
    		{  
    		System.out.println(entry.getKey() +"\t"+entry.getValue());  
    		}  
    		System.out.println("\n"); 
            
        }
 
        System.out.println("\nNumber of occurrences of each word in the string:\n" + newMap);
	}
	    
}
